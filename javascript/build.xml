<project name="WEBPKI.ORG javascript" default="help" basedir=".">

  <!-- set global properties for this build -->

  <property name="temp_dir" location=".tmp" />
  <property name="src_dir" value="src/" />
  <property name="dist_dir" value="dist/" />
  <property name="ext_dir" value="src/antcrypto"/> 
  <property name="ext_jar" value="antcrypto.jar"/> 
  <property name="webpki-libext" value="webpki.org-libext-1.00.jar" />
  <property name="webpki.dist_dir" value="../library/dist/" />
  <property name="bc.jar"  value="../resources/third-party-jars"/>
  <property name="ant_dir" value="src/antsupport/" />
  <property name="namespace" value="namespace.js" />
  <property name="runfile" value="${temp_dir}/runthis.js/" />
  <property name="libjson" value="${dist_dir}/libjson.js/" />
  

  <target name="help">
    <echo message="Targets: parsercore decoder biginteger asn1 base64url libjson signatures keyserialization [antcrypto]."/>
  </target>
    
  <target name="clean">
    <delete dir="${temp_dir}"/>
  </target>
  
  <target name="antcrypto" depends="clean">
    <mkdir dir="${temp_dir}" />
    <javac debug="${debug}"
           srcdir="${ext_dir}"
           destdir="${temp_dir}" 
           includeAntRuntime="false">
       <classpath>
            <fileset dir="${webpki.dist_dir}">
               <include name="${webpki-libext}"/>
             </fileset>
             <fileset dir="${bc.jar}">
                <include name="*.jar"/>
             </fileset>
       </classpath>
    </javac>
    <jar jarfile="${dist_dir}/${ext_jar}">
      <fileset dir="${temp_dir}"/>
    </jar>
    </target>
  
  <target name="add-files">
     <concat destfile="${runfile}" append="true">
       <sort>
          <fileset dir="${src_dir}" includes="${jsfileset}"/>
        </sort>
     </concat>
  </target>

  <target name="_antreplacement">
    <replaceregexp file="${runfile}"
        match="\s*\/\*\s+\*\s+Copyright\ 2006\-2014\ WebPKI\.org.+?\*\/"
        replace=""
        flags="sg"/>
  </target>

  <target name="test" depends="clean">
    <fixcrlf srcdir="${src_dir}"
       tab="remove"
       tablength="4"
       eol="lf"
       eof="remove"
       includes="**/*.js"/>
    <mkdir dir="${temp_dir}" />
    <concat destfile="${runfile}" append="true">
       <fileset dir="${ant_dir}"/>
    </concat>
    <script language="javascript"> <![CDATA[
        var path = project.getProperty ("files");

        // Build one fileset at a time
        while (path != null) {
            var i = path.indexOf (',');
            var jsfileset = path;
            if (i > 0) {
                jsfileset = path.substring (0, i);
                path = path.substring (i + 1);
            } else {
                path = null;
            }
            var antcall = project.createTask ("antcall");
            antcall.setTarget ("add-files");
            var prop = antcall.createParam ();
            prop.setName ("jsfileset");
            prop.setValue (jsfileset);
            antcall.perform ();
        }
    ]]>
    </script>
    <antcall target="_antreplacement"/>
    <script language="javascript" src="${runfile}">
       <classpath>
           <fileset dir="rhino-lib" includes="*.jar"/>
            <fileset dir="${webpki.dist_dir}">
               <include name="${webpki-libext}"/>
             </fileset>
             <fileset dir="${bc.jar}">
                <include name="*.jar"/>
             </fileset>
             <fileset dir="${dist_dir}">
                <include name="${ext_jar}"/>
             </fileset>
           </classpath>
    </script>
  </target>

    <!-- Core JSON parser testing -->
  <target name="parsercore">
    <antcall target="test">
       <param name="files" value="jsonparser/*,math/*,util/*,jsonparser/test/core-test.js"/>
    </antcall>
  </target>
  
    <!-- BigInteger testing -->
  <target name="biginteger">
    <antcall target="test">
       <param name="files" value="math/*,util/*,math/test/biginteger-test.js"/>
    </antcall>
  </target>

  <!-- Base64URL testing -->
  <target name="base64url">
    <antcall target="test">
       <param name="files" value="util/*,util/test/base64url-test.js"/>
    </antcall>
  </target>
  

  <!-- Decoder only testing -->
  <target name="decoder">
    <antcall target="test">
       <param name="files" value="jsonparser/*,math/*,util/*,jsonparser/test/decoder-test.js"/>
    </antcall>
  </target>
  
  <!-- ASN.1 only testing -->
  <target name="asn1">
    <antcall target="test">
       <param name="files" value="asn1/*,util/*,asn1/test/asn1-test.js"/>
    </antcall>
  </target>
  
  <!-- Key serialization only testing -->
  <target name="keyserialization">
    <antcall target="test">
       <param name="files" value="jsonparser/*,math/*,util/*,asn1/*,crypto/*,crypto/test/keyserialization-test.js"/>
    </antcall>
  </target>
  
  <!-- Signature testing -->
  <target name="signatures">
    <antcall target="test">
       <param name="files" value="jsonparser/*,math/*,util/*,asn1/*,crypto/*,crypto/test/signature-test.js"/>
    </antcall>
  </target>
  
  <!-- Building browser JSON library -->
  <target name="libjson" depends="clean">
    <property name="files" value="jsonparser/*,math/*,util/*,crypto/*,asn1/*"/>
    <mkdir dir="${temp_dir}" />
    <script language="javascript"> <![CDATA[
        var path = project.getProperty ("files");

        // Build one fileset at a time
        while (path != null) {
            var i = path.indexOf (',');
            var jsfileset = path;
            if (i > 0) {
                jsfileset = path.substring (0, i);
                path = path.substring (i + 1);
            } else {
                path = null;
            }
            var antcall = project.createTask ("antcall");
            antcall.setTarget ("add-files");
            var prop = antcall.createParam ();
            prop.setName ("jsfileset");
            prop.setValue (jsfileset);
            antcall.perform ();
        }
    ]]>
    </script>
    <antcall target="_antreplacement"/>
    <copy file="${src_dir}/webpkicopyright.js" tofile="${libjson}" overwrite="true"/>
    <concat destfile="${libjson}" append="true">
       <fileset file="${runfile}"/>
    </concat>
  </target>

</project>
