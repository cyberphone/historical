<project name="WebCrypto++ Payment Demo" default="help">

  <!-- set properties for this build -->
  <property name="src_dir" value="src"/>
  <property name="packimage_dir" value="packaged-images"/>
  <property name="class_war_path" value="WEB-INF/classes/org/webpki/webapps/wcpppaymentdemo"/>
  
  <property name="appcorename" value="WebCryptoPlusPlus"/>
  <property name="application" value="${appcorename}.war"/>
  
  <property name="keypassword" value="foo123"/>
  <property name="keyfilext" value=".p12"/>
  <property name="key_dir" location="keys"/>

  <property name="bankkey" value="mybank-eecert"/>
  <property name="paymentroot" value="payment-network-rootca"/>

  <property name="merchantkey" value="demomerchant-eecert"/>
  <property name="merchantroot" value="merchant-network-rootca"/>
  
  <property name="encryptionkey_rsa" value="mybank-encryption-key-rsa"/>
  <property name="encryptionkey_ec" value="mybank-encryption-key-ec"/>
  <property name="clientroot" value="mybank-clientroot"/>
  <property name="clientkey_rsa" value="mybank-client-key-rsa"/>
  <property name="clientkey_ec" value="mybank-client-key-ec"/>
  
  <property name="debug" value="on"/>
  <property environment="env"/>
  <property name="openkeystore" location="../../openkeystore"/>
  <property name="third_party_jars" location="${openkeystore}/resources/third-party-jars"/>
  <property name="webpki_jars" location="${openkeystore}/library/dist"/>
  <property name="catalina.home" value="${env.CATALINA_HOME}"/>

	<resources id="security_constraint">
<string><![CDATA[
    <security-constraint>
      <web-resource-collection>
        <web-resource-name>The app</web-resource-name>
        <url-pattern>/*</url-pattern>
      </web-resource-collection>
      <user-data-constraint>
        <transport-guarantee>CONFIDENTIAL</transport-guarantee>
      </user-data-constraint>
    </security-constraint>
]]></string>
    </resources>

	<resources id="wcpp_application.xml">
<string><![CDATA[    <!-- WebCrypto++ Payment Demo -->
    <module>
        <web>
            <web-uri>${application}</web-uri>
            <context-root>/${appcorename}</context-root>
        </web>
    </module>
</application>]]></string>
    </resources>
  <property name="ejbca-app-xml-mod" refid="wcpp_application.xml"/>

  <condition property="storetype" value="PKCS12" else="JKS">
    <matches pattern=".*\.p12$" string="${keyfilext}"/>
  </condition>

  <target name="help">
      <echo message="build nowebcrypto webcrypto -Dlocalhost=0 -Decclient=0 -Decbank=0 mobilepki-ejbca localhost-ejbca zip-distribution createcerts"/>
  </target>

  <target name="_init" unless="app_path">
    <!-- Set up where application should reside --> 
    <condition property="tomcat_app_root_set">
      <isset property="env.CATALINA_HOME"/>
    </condition>
    <fail message="CATALINA_HOME must be set to environment!" unless="tomcat_app_root_set"/>

    <!-- Set path to application.  -->
    <property name="dist_dir" value="dist"/>
  </target>

  <target name="_delete_tmp" unless="${ejbca.tmp.path}">
    <delete dir="${temp_dir}"/>
    <mkdir dir="${temp_dir}"/>
  </target>

  <target name="_build">
    <property name="temp_dir" value=".tmp"/>
    <antcall target="_delete_tmp"/>
    <property name="third.party.jars" value="${third_party_jars}"/>
    <path id="compile.classpath">
	  <fileset dir="${library.dir}">
        <include name="*.jar"/>
     </fileset>
     <fileset dir="${third.party.jars}">
	    <include name="*.jar"/>
      </fileset>
	</path>
	<property name="compile_classpath" refid="compile.classpath"/>
    <fixcrlf srcdir="${src_dir}"
       tab="remove"
       tablength="4"
       eol="lf"
       eof="remove"
       includes="**/*.java"/>
    <copy file="web.xml" todir="${temp_dir}"/>
    <javac debug="${debug}"
           source="${javaversion}"
           target="${javaversion}"
           srcdir="${src_dir}"
           destdir="${temp_dir}"
           classpath="${compile_classpath}"
           includeAntRuntime="false"/>
    <property name="bank.port.map" value=""/>
    <property name="encryptionkey" value="${encryptionkey_rsa}"/>
    <property name="clientkey" value="${clientkey_rsa}"/>
    <property name="bouncycastle.first" value="true"/>
    <property name="webpki.jars" value="${library.dir}"/>
    <replace file="${temp_dir}/web.xml">
	  <replacefilter token="@bouncycastle-first@" value="${bouncycastle.first}"/>
      <replacefilter token="@security-constraints@" value="${security.constraints}"/>
	  <replacefilter token="@bank-port-map@" value="${bank.port.map}"/>
	  <replacefilter token="@bank-url@" value="${bank.host}/${appcorename}"/>
	  <replacefilter token="@merchant-url@" value="${merchant.host}/${appcorename}/merchant"/>
	  <replacefilter token="@card-font@" value="${card.font}"/>
	  <replacefilter token="@web-crypto@" value="${web.crypto}"/>
	  <replacefilter token="@key-password@" value="${keypassword}"/>
	  <replacefilter token="@bank-eecert@" value="${bankkey}${keyfilext}"/>
	  <replacefilter token="@merchant-eecert@" value="${merchantkey}${keyfilext}"/>
	  <replacefilter token="@payment-root@" value="${paymentroot}.cer"/>
	  <replacefilter token="@merchant-root@" value="${merchantroot}.cer"/>
	  <replacefilter token="@bank-encryptionkey@" value="${encryptionkey}.cer"/>
	  <replacefilter token="@bank-decryptionkey@" value="${encryptionkey}${keyfilext}"/>
	  <replacefilter token="@bank-client-root@" value="${clientroot}.cer"/>
	  <replacefilter token="@bank-client-eecert@" value="${clientkey}${keyfilext}"/>
	</replace>
    <war destfile="${dist_dir}/${application}" webxml="${temp_dir}/web.xml">
      <classes dir="${temp_dir}">
         <exclude name="web.xml"/>
      </classes>
      <lib dir="${third.party.jars}">
         <include name="bcprov-*.jar"/>
      </lib>
      <lib dir="${webpki.jars}">
         <include name="webpki.org-libext*.jar"/>
         <include name="webpki.org-webutil*.jar"/>
      </lib>
      <fileset dir="web"/>
      <zipfileset dir="${key_dir}" prefix="${class_war_path}"/>
      <zipfileset dir="${packimage_dir}" prefix="${class_war_path}"/>
    </war>
  </target>

  <target name="nowebcrypto" depends="_init,build">
      <copy file="${dist_dir}/${application}" todir="${env.CATALINA_HOME}/webapps" overwrite="true" preservelastmodified="true"/>
  </target>

  <target name="webcrypto" depends="_init">
     <property name="local_sc" refid="security_constraint"/>
     <condition property="security_constraints" value="${local_sc}" else="">
       <isset property="localhost"/>
     </condition>
     <condition property="bank_host" value="https://localhost:8442" else="http://mybank.com:8080">
       <isset property="localhost"/>
     </condition>
     <condition property="merchant_host" value="https://localhost:8442" else="http://merchant.com:8080">
       <isset property="localhost"/>
     </condition>
     <condition property="encryptionkey" value="${encryptionkey_ec}">
       <isset property="ecbank"/>
     </condition>
     <condition property="clientkey" value="${clientkey_ec}">
       <isset property="ecclient"/>
     </condition>
     <antcall target="_build">
       <param name="security.constraints" value="${security_constraints}"/>
       <param name="bank.host" value="${bank_host}"/>
       <param name="merchant.host" value="${merchant_host}"/>
       <param name="card.font" value="Arial Unicode MS"/>
       <param name="web.crypto" value="true"/>
       <param name="javaversion" value="1.7"/>
       <param name="library.dir" value="${webpki_jars}"/>
    </antcall>
    <copy file="${dist_dir}/${application}" todir="${env.CATALINA_HOME}/webapps" overwrite="true" preservelastmodified="true"/>
  </target>
  
  <!-- mobilepki using EJBCA plugin mode -->
  <target name="mobilepki-ejbca">
     <echo message="WebCrypto++ &quot;mobilepki.org&quot; Demo Plugin"/>
     <property name="dist_dir" value="${ejbca.gen.path}"/>
     <path id="compile.classpath.ejbca">
	    <fileset dir="${plugin.ejbca.ant.custom.enrollment_plugin_directory}/lib.common">
           <include name="*.jar"/>
        </fileset>
        <pathelement path="${ejbca.classpath}"/>
	 </path>
     <property name="compile_classpath" refid="compile.classpath.ejbca"/>
     <property name="temp_dir" value="${ejbca.tmp.path}"/>
     <property name="dist_dir" value="dist"/>
     <property name="bouncycastle.first" value="false"/>
     <property name="bank.port.map" value="8442"/>
     <property name="third.party.jars" value="empty.lib"/>
     <property name="webpki.jars" value="empty.lib"/>
     <property name="bank_host" value="https://mobilepki.org"/>
     <property name="merchant_host" value="https://test.webpki.org"/>
     <antcall target="_build">
       <param name="security.constraints" refid="security_constraint"/>
       <param name="bank.host" value="${bank_host}"/>
       <param name="merchant.host" value="${merchant_host}"/>
       <param name="card.font" value="DejaVue"/>
       <param name="web.crypto" value="true"/>
       <param name="javaversion" value="1.6"/>
       <param name="library.dir" value="${plugin.ejbca.ant.custom.enrollment_plugin_directory}/lib.common"/>
     </antcall>
     <!-- Update application.xml -->
     <replace file="${ejbca.app.xml}" value="${ejbca-app-xml-mod}">
	    <replacetoken><![CDATA[</application>]]></replacetoken>
     </replace>
  </target>
  
  <target name="localhost-ejbca">
     <echo message="WebCrypto++ &quot;localhost&quot; Demo Plugin"/>
     <property name="bank_host" value="https://localhost:8442"/>
     <property name="merchant_host" value="https://localhost:8442"/>
     <property name="bank.port.map" value=""/>
     <antcall target="mobilepki-ejbca"/>
  </target>
  
  <target name="build">
    <antcall target="_build">
       <param name="security.constraints" value=""/>
       <param name="bank.host" value="http://mybank.com:8080"/>
       <param name="merchant.host" value="http://merchant.com:8080"/>
       <param name="card.font" value="Arial Unicode MS"/>
       <param name="web.crypto" value="false"/>
       <param name="javaversion" value="1.7"/>
       <param name="library.dir" value="${webpki_jars}"/>
    </antcall>
  </target>

  <target name="_createcert">
  	<java fork="yes"
  		  classname="org.webpki.ca.CommandLineCA"
  		  dir="${key_dir}"
		  failonerror="true">
  		<classpath>
  			 <fileset dir="${webpki_jars}">
  		        <include name="*.jar"/>
  			 </fileset>
  			 <fileset dir="${third_party_jars}">
  		        <include name="*.jar"/>
  			 </fileset>
  			 		</classpath>
  	    <arg line="${cmd} -out/keyalias mykey"/>
  	</java>
  </target>

  <target name="_getroot">
	<exec executable="keytool" failonerror="true" dir="${key_dir}">
	  <arg line="-exportcert -keystore ${rootfile}${keyfilext} -alias mykey -storepass ${keypassword} -storetype ${storetype} -file ${rootfile}.cer"/>
	</exec>
  </target>
  
  <target name="_certpaymentnetwork">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Payment Network Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${paymentroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${paymentroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore payment-network-rootca${keyfilext} -entity/ca -subject &quot;CN=Payment Network Sub CA3, C=EU&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore temp-subca${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg RSA_SHA512 -serial 3"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value=" -ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore temp-subca${keyfilext} -entity/ee -subject &quot;CN=mybank.com, serialNumber=4501, C=FR&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2020-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${bankkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg ECDSA_SHA256"/>
    </antcall>
  </target>

 <target name="_certmerchants">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Merchant Network Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${merchantroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${merchantroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${merchantroot}${keyfilext} -entity/ca -subject &quot;CN=Merchant Network Sub CA5, C=DE&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore temp-subca${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA512 -serial 5"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value=" -ca/addpath all -ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore temp-subca${keyfilext} -entity/ee -subject &quot;CN=Demo Merchant, serialNumber=896325, C=DE&quot; -validity/start 2014-01-01T00:00:00 -validity/end 2020-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${merchantkey}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword}  -sigalg RSA_SHA256 -keysize 2048"/>
    </antcall>
  </target>

  <target name="_clientcert">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ca -subject &quot;CN=Mybank Client Root CA1, C=US&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientroot}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 4096 -sigalg RSA_SHA512 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${clientroot}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=The Cardholder, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_rsa}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA512"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-ca/keypass ${keypassword} -ca/storetype ${storetype} -ca/storepass ${keypassword} -ca/keystore ${clientroot}${keyfilext} -entity/ee -subject &quot;CN=The Cardholder, serialNumber=95673522&quot; -validity/start 2012-07-10T10:00:00 -validity/end 2025-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${clientkey_ec}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword}  -ecccurve NIST_P_256 -sigalg RSA_SHA512"/>
    </antcall>
    </target>

  <target name="_authencryption">
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ee -subject &quot;CN=Mybank Encryption Key1&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${encryptionkey_rsa}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -keysize 2048 -sigalg RSA_SHA256 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${encryptionkey_rsa}"/>
    </antcall>
    <antcall target="_createcert">
       <param name="cmd" value="-selfsigned -entity/ee -subject &quot;CN=Mybank Encryption Key1&quot; -validity/start 2010-07-10T10:00:00 -validity/end 2030-07-10T09:59:59 -out/storetype ${storetype} -out/keystore ${encryptionkey_ec}${keyfilext} -out/storepass ${keypassword} -out/keypass ${keypassword} -ecccurve NIST_P_256 -sigalg ECDSA_SHA256 -serial 1"/>
    </antcall>
    <antcall target="_getroot">
       <param name="rootfile" value="${encryptionkey_ec}"/>
    </antcall>
    </target>
  
  <target name="createcerts">
    <antcall target="_certpaymentnetwork"/>
    <antcall target="_certmerchants"/>
    <antcall target="_clientcert"/>
    <antcall target="_authencryption"/>
    <delete>
  	  <fileset dir="${key_dir}">
  		<include name="temp*"/>
  	  </fileset>
    </delete>    
  </target>
  
  <target name="_unzipit" if="uu">
    <delete dir="${dd}/${appcorename}"/>
    <unzip src="${dd}/${appcorename}.zip" dest="${dd}"/>
  </target>

  <target name="zip-distribution">
    <fail unless="dd" message="-&#10;
***************************************************************&#10;
 You must define a distribution directory using the -D option:&#10;
 ant zip-distribution -Ddd=the_path_to_the_directory.&#10;
 Optionally you can specify -Duu=0 which deletes ${appcorename}&#10;
 and replaces the directory with the unzipped content&#10;
***************************************************************&#10;"/>
	<echo message="Producing ${appcorename} .zip and .zip.SHA1 files..."/> 
   	<delete file="${dd}/${appcorename}.zip" failonerror="false"/>
    <zip destfile="${dd}/${appcorename}.zip">
      <zipfileset dir="." prefix="${appcorename}">
       	<exclude name="/**/.*"/>
        <exclude name="/.tmp/**"/>
       	<exclude name="**/.settings/**"/>
       	<exclude name="**/bin/**"/>
       	<exclude name="dist/**"/>
      </zipfileset>
    </zip>
    <checksum file="${dd}/${appcorename}.zip" fileext=".SHA1" algorithm="sha1" forceOverwrite="yes"/>
    <antcall target="_unzipit"/>
  </target>
   
</project>
